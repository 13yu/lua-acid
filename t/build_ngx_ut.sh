#!/bin/sh

# For each lib/test_*.lua, build a xx.t wrapper in order to run
# acid.unittest based tests in nginx.

tmpl='# vim:set ft=lua ts=4 sw=4 et ft=perl:

################################################################################
# DO NOT EDIT THIS FILE.                                                       #
# Use ./t/build_ngx_ut.sh to regenerate this wrapper file.                     #
################################################################################

use Test::Nginx::Socket "no_plan";

no_long_string();

# Env TEST_VERBOSE is set by command "prove"
#
# Only env var starting with TEST_NGINX_ will be evaluated in the "--- config"
# block.
$ENV{TEST_NGINX_ACID_UT_VERBOSE} = $ENV{TEST_VERBOSE} || 0;

run_tests();

__DATA__

=== TEST 1: ACID_UT_NAME
--- http_config
    lua_shared_dict        shared_dict_lock 1m;
    lua_shared_dict        test_shared      10m;
    lua_check_client_abort on;

    lua_package_path "./lib/?.lua;;";
    lua_package_cpath "./lib/?.so;;";
--- config
    location /t {
        content_by_lua_block {
            require("acid.unittest").ngx_test_modules(
                { "test_ACID_UT_NAME", },
                { debug = ($TEST_NGINX_ACID_UT_VERBOSE == 1), }
            )
        }
    }
--- request
GET /t
--- response_body_like
.*tests all passed.*'

for fn in $(cd lib && ls test_*.lua); do

    # strip "test_" and ".lua"
    # test_xxx.lua --> xxx

    fn=${fn%.lua}
    fn=${fn#test_}

    echo "$tmpl" \
        | awk -v fn=$fn '{ gsub("ACID_UT_NAME", fn); print $0; }' \
        > t/$fn.t

done
